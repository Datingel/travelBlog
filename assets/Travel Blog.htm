<!DOCTYPE html>
<!-- saved from url=(0022)http://127.0.0.1:5500/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Open+Sans&display=swap");
    </style>
    
    <title>Travel Blog</title>
  <script data-dapp-detection="">
(function() {
  let alreadyInsertedMetaTag = false

  function __insertDappDetected() {
    if (!alreadyInsertedMetaTag) {
      const meta = document.createElement('meta')
      meta.name = 'dapp-detected'
      document.head.appendChild(meta)
      alreadyInsertedMetaTag = true
    }
  }

  if (window.hasOwnProperty('web3')) {
    // Note a closure can't be used for this var because some sites like
    // www.wnyc.org do a second script execution via eval for some reason.
    window.__disableDappDetectionInsertion = true
    // Likely oldWeb3 is undefined and it has a property only because
    // we defined it. Some sites like wnyc.org are evaling all scripts
    // that exist again, so this is protection against multiple calls.
    if (window.web3 === undefined) {
      return
    }
    __insertDappDetected()
  } else {
    var oldWeb3 = window.web3
    Object.defineProperty(window, 'web3', {
      configurable: true,
      set: function (val) {
        if (!window.__disableDappDetectionInsertion)
          __insertDappDetected()
        oldWeb3 = val
      },
      get: function () {
        if (!window.__disableDappDetectionInsertion)
          __insertDappDetected()
        return oldWeb3
      }
    })
  }
})()</script><link rel="stylesheet" href="./Travel Blog_files/stylesheet.css"></head>

  <body cz-shortcut-listen="true">
    <div class="container-card">
      <div class="content-wrapper">
        <nav>
          <ul class="nav-wrapper">
            <li style="
                color: black;
                border-bottom: 2px solid black;
                font-size: x-large;
                font-weight: bold;
              ">
              LA
            </li>
            <li><a href="http://127.0.0.1:5500/#">Articles</a></li>
            <li><a href="http://127.0.0.1:5500/#">About</a></li>
            <li><a href="http://127.0.0.1:5500/#">Contact</a></li>
          </ul>
        </nav>

        <div>
          <h1>
            Hi - iam Raphael and i write <br>
            about traveling
          </h1>
        </div>

        <h2 style="margin-bottom: 2rem;">Latest Articles</h2>

        <div class="article-wrapper">
          <div class="article">
            <div class="articleImg img1"></div>
            <p class="article-txt">
              Travel Storys from the tree experience
            </p>
          </div>

          <div class="article">
            <div class="articleImg img2"></div>
            <p class="article-txt">Travel Storys from the tree experience</p>
          </div>
        </div>
      </div>
      <div class="wrapper-image"></div>
    </div>
  <!-- Code injected by live-server -->
<script type="text/javascript">
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>

</body></html>